trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2f837dad-b49d-411f-a8e9-dafc80d6f3aa'
  imageRepository: 'sermadtestimage'
  containerRegistry: 'sermadregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # Capture the Docker image details in pipeline variables
    - script: |
        echo "##vso[task.setvariable variable=imageName]$(containerRegistry)/$(imageRepository):$(tag)"
      displayName: 'Set Image Name Variable'
      
    - script: |
        # Capture the ACI creation status
        aciStatus=$(az container show --resource-group harpoon --name sermadtestcontainer --query 'provisioningState' -o tsv)

        # Write the status to a file
        echo "$aciStatus" > $(Build.ArtifactStagingDirectory)/aci_status.txt
      displayName: 'Capture ACI Creation Status'

    # Publish the status file as an artifact
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'ACIStatus'
        publishLocation: 'Container'
      displayName: 'Publish ACI Status as Artifact'
      
    - script: |
        echo "Build.ArtifactStagingDirectory = $(Build.ArtifactStagingDirectory)"
        aciStatus=$(az container show --resource-group harpoon --name sermadtestcontainer --query 'provisioningState' -o tsv)
        echo "ACI Status: $aciStatus"

        # Write the status to a file for debugging
        echo "$aciStatus" > $(Build.ArtifactStagingDirectory)/aci_status.txt
      displayName: 'Capture ACI Creation Status and Debug'
